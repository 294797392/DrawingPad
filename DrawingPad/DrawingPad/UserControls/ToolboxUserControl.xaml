<UserControl x:Class="DrawingPad.UserControls.ToolboxUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DrawingPad.UserControls"
             xmlns:pad="clr-namespace:DrawingPad"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>

        <Style x:Key="StyleExpanderToolboxGroup" TargetType="{x:Type Expander}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0,0,0,0" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ExpandDirection" Value="Down"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">

                        <ControlTemplate.Resources>
                            <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
                                <Setter Property="Background" Value="{StaticResource ResourceKey=BrushToolboxItemBackground}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=BrushToolboxItemBorder}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Height" Value="30"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <ControlTemplate.Resources>
                                                <Storyboard x:Key="HoverOn">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="HoverOff">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="PressedOn">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="PressedOff">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="StoryboardExpanded">
                                                    <DoubleAnimation Storyboard.TargetName="RotateTransform" Storyboard.TargetProperty="Angle" 
                                                                     From="-90" To="0" Duration="00:00:01" SpeedRatio="10"/>
                                                </Storyboard>
                                                <Storyboard x:Key="StoryboardCollapsed">
                                                    <DoubleAnimation Storyboard.TargetName="RotateTransform" Storyboard.TargetProperty="Angle" 
                                                                     From="0" To="-90" Duration="00:00:01" SpeedRatio="10"/>
                                                </Storyboard>
                                            </ControlTemplate.Resources>
                                            <Border Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" 
                                                    CornerRadius="2,2,2,2" Background="{TemplateBinding Background}"
                                                    Height="{TemplateBinding Height}" BorderBrush="{TemplateBinding BorderBrush}">
                                                <Grid SnapsToDevicePixels="False">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="19" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Rectangle x:Name="Rectangle" StrokeThickness="1" RadiusX="1" RadiusY="1" />
                                                    <Rectangle x:Name="ShineRectangle" StrokeThickness="1" RadiusX="1" RadiusY="1" />
                                                    <Rectangle x:Name="HoverRectangle" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0"/>
                                                    <Rectangle x:Name="HoverShineRectangle" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" />
                                                    <Rectangle x:Name="PressedRectangle" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" />
                                                    <Path x:Name="Up_Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                                          Data="M 0 0 L 5 5 L 10 0 Z" Fill="{StaticResource ResourceKey=BrushToolboxForeground}">
                                                        <Path.LayoutTransform>
                                                            <RotateTransform x:Name="RotateTransform" Angle="-90"/>
                                                        </Path.LayoutTransform>
                                                    </Path>
                                                    <Path Visibility="Collapsed" HorizontalAlignment="Center" x:Name="Down_Arrow" VerticalAlignment="Center" Data="M 0 4 L 4 0 L 8 4 Z"/>
                                                    <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Stretch" 
                                                                      Margin="4,2,0,2" VerticalAlignment="Center" Grid.Column="1" 
                                                                      RecognizesAccessKey="True" />
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="true">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource StoryboardExpanded}"/>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard Storyboard="{StaticResource StoryboardCollapsed}"/>
                                                    </Trigger.ExitActions>
                                                    <Setter Property="Fill" TargetName="Up_Arrow" Value="{StaticResource ResourceKey=BrushToolboxForeground}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                                                    </Trigger.ExitActions>
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                                                    </Trigger.EnterActions>
                                                    <Setter Property="Fill" TargetName="Up_Arrow" Value="{StaticResource ResourceKey=BrushToolboxForeground}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
                                                    </Trigger.ExitActions>
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
                                                    </Trigger.EnterActions>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ControlTemplate.Resources>

                        <Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="3">
                            <DockPanel x:Name="dockPanel" Background="{x:Null}">
                                <ToggleButton x:Name="HeaderSite" FontFamily="{TemplateBinding FontFamily}" 
                                              FontSize="{TemplateBinding FontSize}" MinWidth="0"
                                              FontStretch="{TemplateBinding FontStretch}" 
                                              FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" 
                                              Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              FocusVisualStyle="{TemplateBinding FocusVisualStyle}" MinHeight="0" 
                                              Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                              IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                              DockPanel.Dock="Top" Style="{StaticResource ExpanderDownHeaderStyle}"/>
                                <Border Visibility="Collapsed" x:Name="border">
                                    <ContentPresenter x:Name="ExpandSite" 
                                                      Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" DockPanel.Dock="Bottom" />
                                </Border>
                            </DockPanel>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Down" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="DataTemplateToolboxItem">
            <Grid>
                <Image Source="{Binding Path=IconURI}" Width="32" Height="32" Stretch="Fill"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="DataTemplateToolboxGroup">
            <Grid>
                <Expander Header="{Binding Path=Name}" Style="{StaticResource ResourceKey=StyleExpanderToolboxGroup}">
                    <ListBox Grid.Row="1" ItemsSource="{Binding Path=Items}" Background="Transparent"
                             ItemTemplate="{StaticResource ResourceKey=DataTemplateToolboxItem}"
                             Margin="1,0,1,0" BorderThickness="0,0,0,1" BorderBrush="{StaticResource ResourceKey=BrushToolboxItemBorder}"
                             Style="{StaticResource ResourceKey=StyleListBox}">

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Margin" Value="5"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Grid>
                                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"/>
                                                <ContentPresenter Margin="{TemplateBinding Padding}"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>

                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel IsItemsHost="True" Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                </Expander>
            </Grid>
        </DataTemplate>

        <Style x:Key="StyleListBoxToolboxGroupList" TargetType="{x:Type ListBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Grid>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" 
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" />
                            <ScrollViewer Focusable="false" Background="{x:Null}">
                                <StackPanel IsItemsHost="true" />
                            </ScrollViewer>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="StyleListBoxToolboxItem" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Background" Value="Red"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="HoverOn">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="HoverOff">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="SelectedOn">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="SelectedOff">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="FocussedOn">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="FocussedOff">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid SnapsToDevicePixels="true" Margin="{TemplateBinding Margin}"
                              Height="{TemplateBinding Height}">
                            <Rectangle x:Name="Background" IsHitTestVisible="False" Opacity="0.25" RadiusX="1" RadiusY="1"/>
                            <Rectangle x:Name="HoverRectangle" IsHitTestVisible="False" Opacity="0" RadiusX="1" RadiusY="1" Fill="{DynamicResource SolidColorBrushListBoxItemGroupHover}"/>
                            <Rectangle x:Name="SelectedRectangle" IsHitTestVisible="False" Opacity="0" RadiusX="1" RadiusY="1"/>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Rectangle x:Name="FocusVisualElement" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource FocussedOff}" x:Name="FocussedOff_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource FocussedOn}" x:Name="FocussedOn_BeginStoryboard"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">

                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}"/>
                                </Trigger.EnterActions>

                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="Selector.IsSelected" Value="False" />
                                </MultiTrigger.Conditions>

                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                                </MultiTrigger.ExitActions>

                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>

                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid>

        <ListBox ItemsSource="{Binding Source={x:Static pad:PadContext.Context}, Path=GroupList}"
                 ItemTemplate="{StaticResource ResourceKey=DataTemplateToolboxGroup}"
                 ItemContainerStyle="{StaticResource ResourceKey=StyleListBoxToolboxItem}"
                 BorderThickness="0,1,1,1" BorderBrush="{StaticResource ResourceKey=BrushToolboxItemBorder}"
                 Background="{StaticResource ResourceKey=BrushToolboxBackground}"
                 Style="{StaticResource ResourceKey=StyleListBoxToolboxGroupList}">
        </ListBox>

    </Grid>

</UserControl>
